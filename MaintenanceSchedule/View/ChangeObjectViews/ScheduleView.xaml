<UserControl x:Class="MaintenanceSchedule.View.ChangeObjectViews.ScheduleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MaintenanceSchedule.View.ChangeObjectViews"
			 xmlns:schedule="clr-namespace:MaintenanceSchedule.ViewModel.ChangeObjectViewModels"
			 xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
			 xmlns:ff="clr-namespace:MaintenanceSchedule.Enums"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="800">
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition/>
			<RowDefinition/>
		</Grid.RowDefinitions>
		<DataGrid ItemsSource="{Binding ScheduleRecordModels}"
				  SelectedItem="{Binding SelectedScheduleRecordModel}"
				  ColumnWidth="*"
				  TextBlock.TextAlignment="Center"
				  ColumnHeaderStyle="{StaticResource columnHeader}"
				  IsReadOnly="False">
			<DataGrid.Columns>				
				<DataGridTextColumn Header="Подстанция" Binding="{Binding Substation}" IsReadOnly="True"/>
				<DataGridTextColumn Header="Присоединение" Binding="{Binding Attachment}" IsReadOnly="True"/>
				<DataGridTextColumn Header="Устройство" Binding="{Binding Name}" IsReadOnly="True"/>
				<DataGridTextColumn Binding="{Binding LastMaintenanceDate, StringFormat={}{0:d MMMM yyyy}, ConverterCulture=ru-Ru}" IsReadOnly="True">
					<DataGridTextColumn.Header>
						<TextBlock>
							Дата последнего
							<LineBreak/>
							технического
							<LineBreak/>
							обслуживания
						</TextBlock>
					</DataGridTextColumn.Header>
				</DataGridTextColumn>
				<DataGridTextColumn Binding="{Binding LastMaintenanceType.Name}" IsReadOnly="True">
					<DataGridTextColumn.Header>
						<TextBlock>
							Тип последнего
							<LineBreak/>
							технического
							<LineBreak/>
							обслуживания
						</TextBlock>
					</DataGridTextColumn.Header>
				</DataGridTextColumn>
				<DataGridTemplateColumn>
					<DataGridTemplateColumn.Header>
						<TextBlock>
							Месяц планируемого
							<LineBreak/>
							технического
							<LineBreak/>
							обслуживания
						</TextBlock>
					</DataGridTemplateColumn.Header>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<ComboBox ItemsSource="{Binding Source={StaticResource months}}"
									  SelectedItem="{Binding PlannedMonth, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="SelectionChanged">
										<i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ChangeItem}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Item}"/>
										<i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.SelectedPlannedMonth}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}, Mode=TwoWay, Path=SelectedValue}"/>
									</i:EventTrigger>									
								</i:Interaction.Triggers>								
							</ComboBox>							
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				
				<DataGridTextColumn Binding="{Binding PlannedMaintenanceType.Name}" IsReadOnly="True">
					<DataGridTextColumn.Header>
						<TextBlock>
							Тип планируемого
							<LineBreak/>
							технического
							<LineBreak/>
							обслуживания
						</TextBlock>
					</DataGridTextColumn.Header>
				</DataGridTextColumn>
				<DataGridTemplateColumn>
					<DataGridTemplateColumn.Header>
						<TextBlock>
							Месяц выполнения
							<LineBreak/>
							технического
							<LineBreak/>
							обслуживания
						</TextBlock>
					</DataGridTemplateColumn.Header>
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<ComboBox ItemsSource="{Binding Source={StaticResource months}}"
									  SelectedItem="{Binding ActualMonth, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"									  >
								<ComboBox.Style>
									<Style TargetType="{x:Type ComboBox}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=Item.IsPlanned, IsAsync=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="False">
												<Setter Property="IsEnabled" Value="False"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</ComboBox.Style>
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="SelectionChanged">
										<i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ChangeItem}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Item}"/>
										<i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.SelectedActualMonth}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}, Path=SelectedValue}"/>
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</ComboBox>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTemplateColumn>
					<DataGridTemplateColumn.Header>
						<TextBlock>
							Тип выполнения
							<LineBreak/>
							технического
							<LineBreak/>
							обслуживания
						</TextBlock>
					</DataGridTemplateColumn.Header>
					<DataGridTemplateColumn.CellTemplate>						
						<DataTemplate>
							<ComboBox	ItemsSource="{Binding MaintenanceTypes}"
										SelectedItem="{Binding ActualMaintenanceType.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
								<ComboBox.Style>
									<Style TargetType="{x:Type ComboBox}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=Item.IsPlanned, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
												<Setter Property="IsEnabled" Value="False"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</ComboBox.Style>
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="SelectionChanged">
										<i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ChangeItem}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Item}"/>
										<i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.SelectedActualType}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}, Path=SelectedValue}"/>
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</ComboBox>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
			</DataGrid.Columns>
		</DataGrid>		
	</Grid>	
</UserControl>